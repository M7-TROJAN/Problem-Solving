public class Solution {
    public string MakeGood(string s) {
          int deletingStartIndex = twoAdjacentCharactersIndex(s);

            while (deletingStartIndex != -1)
            {
               s = removeInRange(s, deletingStartIndex, deletingStartIndex + 1);
                deletingStartIndex = twoAdjacentCharactersIndex(s);
            }

            return s;
    }
    static bool isTwoAdjacentCharacters(char c1, char c2) =>
           c1 - c2 == 32 || c1 - c2 == -32;
        static int twoAdjacentCharactersIndex(string s)
        {
            for (int i = 0; i < s.Length - 1; i++)
                if (isTwoAdjacentCharacters(s[i], s[i + 1]))
                    return i;
            return -1;
        }
        public static string removeInRange(string s, int startIndex, int LastIndex)
        {
            string result = "";

            for (int i = 0; i < startIndex; i++)
                result += s[i];

            for (int i = LastIndex + 1; i < s.Length; i++)
                result += s[i];

            return result;
        }
}
