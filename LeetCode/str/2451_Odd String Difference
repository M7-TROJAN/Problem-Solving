public class Solution {
    public string OddString(string[] words) => oddNumberDifference(words);
    static int[] differenceIntegerArrayOfWord(string word)
        {
            int[] result = new int[word.Length - 1];

            for (int i = 1; i < word.Length; i++)
                result[i - 1] = (word[i] - 97) - (word[i - 1] - 97);

            return result;
        }
        static bool areArraysEqual(int[] arr1, int[] arr2)
        {
            if (arr1.Length != arr2.Length) return false;

            for (int i = 0; i < arr1.Length; i++)
                if (arr1[i] != arr2[i])
                    return false;

            return true;

        }
        static string oddNumberDifference(string[] words)
        {
            string result = "";
            int[] wordDifferenceIntegerArray;

            if (areArraysEqual(differenceIntegerArrayOfWord(words[0]), differenceIntegerArrayOfWord(words[1])) ||

                areArraysEqual(differenceIntegerArrayOfWord(words[0]), differenceIntegerArrayOfWord(words[2]))
                )
                wordDifferenceIntegerArray = differenceIntegerArrayOfWord(words[0]);
            else
                wordDifferenceIntegerArray = differenceIntegerArrayOfWord(words[1]);


            for (int i = 0; i < words.Length; i++)
                if (!areArraysEqual(differenceIntegerArrayOfWord(words[i]), wordDifferenceIntegerArray))
                {
                    result = words[i];
                    break;
                }

            return result;
        }
}
