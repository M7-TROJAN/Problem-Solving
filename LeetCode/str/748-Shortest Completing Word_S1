using System;
using System.Collections.Generic;
using System.Linq;

namespace Labs
{
    class Program
    {
        static void Main(string[] args)
        {
            Console.WriteLine(ShortestCompletingWord("1s3 456", new string[] {"looks", "pest", "stew", "show" }));
        }
        static string ShortestCompletingWord(string licensePlate, string[] words)
        {
            licensePlate = getCompletingWord(licensePlate);

            int wordIndex = 0, wordLength=1000;

            for (int i = 0; i < words.Length; i++)
            {
                if (isContainsWord(words[i], licensePlate))
                {
                    if (words[i].Length < wordLength)
                    {
                        wordIndex = i;
                        wordLength = words[i].Length;
                    }
                }
            }
            return words[wordIndex];
        }
        static string getCompletingWord(string word)
        {
            string completingWord = "";

            for (int i = 0; i < word.Length; i++)
                if (isCharacter(word[i]))
                    completingWord += word[i];

            return completingWord;
        }
        static bool isCharacter(char c) => ((int)c >= 97 && (int)c <= 122) || ((int)c >= 65 && (int)c <= 90) ? true : false;
        static bool isContainsWord(string mainWord, string subWord)
        {

            string distinctSubWord = toLowerCase(distinct(subWord));
            mainWord = toLowerCase(mainWord);
            subWord = toLowerCase(subWord);

            for (int i = 0; i < distinctSubWord.Length; i++)
                if (!(countOfOccurrence(subWord, subWord[i]) <= countOfOccurrence(mainWord, subWord[i])))
                    return false;

            return true;
        }
        static string distinct(string s)=> new String(s.Distinct().ToArray());
        static int countOfOccurrence(string s, char c)
        {
            int counter = 0;
            for (int i = 0; i < s.Length; i++)
                if (s[i] == c)
                    counter++;
            return counter;
        }
        static string toLowerCase(string s)
        {
            string result = "";
            for (int i = 0; i < s.Length; i++)
            {
                if ((s[i] >= 65 && s[i] <= 90))
                    result += (char)(((int)s[i]) + 32);
                else
                    result += s[i];
            }
            return result;
        }


    }
}
