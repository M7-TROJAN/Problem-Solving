public class Solution {
    public bool IsCircularSentence(string sentence) {
        string[] splitedSentence = splitString(sentence, ' ');

            if (isLastCharacterOfTheLastWordIsEqualToTheFirstCharacterOfTheFirstWord(splitedSentence[0], splitedSentence[splitedSentence.Length - 1]))
                return false;

            for (int i = 0; i < splitedSentence.Length - 1; i++)
                if (isLastCharacterOfTheWordIsEqualToTheFirstCharacterOfTheNextWord(splitedSentence[i], splitedSentence[i + 1]))
                    return false;

            return true;
    }
    static string[] convertListToArray(List<string> lst)
        {
            string[] result = new string[lst.Count];

            for (int i = 0; i < lst.Count; i++)
                result[i] = lst[i];

            return result;
        }
        static string[] splitString(string s, char delimeter)
        {
            string word = "";
            s += delimeter;

            List<string> splitedString = new List<string>();

            for (int i = 0; i < s.Length; i++)
            {
                if (s[i] != delimeter)
                    word += s[i];
                else
                {
                    splitedString.Add(word);
                    word = "";
                }
            }

            return convertListToArray(splitedString);
        }
        static bool isLastCharacterOfTheWordIsEqualToTheFirstCharacterOfTheNextWord(string prevWord, string nextWord) =>
            prevWord[prevWord.Length - 1] != nextWord[0];
        static bool isLastCharacterOfTheLastWordIsEqualToTheFirstCharacterOfTheFirstWord(string firstWord, string lastWord) =>
            firstWord[0] != lastWord[lastWord.Length - 1];

}
