public class Solution {
    public string LongestNiceSubstring(string s) {
        
        int[][,] dp = new int[s.Length][,];
        int[] count = new int[s.Length]; 
        
        for(int i=0; i < s.Length; i++)
        {
            dp[i] = new int['z'-'a'+1, 2];
        }
      
        bool isFirst;
        string result = string.Empty;
        
        for(int k=0; k <= s.Length; k++)
        {
            isFirst = true;
            for(int i=0, j=k; j < s.Length; i++, j++)
            {
                if (s[j] >= 'A' && s[j] <= 'Z') 
                { 
                    if (dp[i][s[j]-'A', 1] == 0)
                    {
                        if (dp[i][s[j]-'A', 0] == 1) { count[i]--; } else { count[i]++; } 
                        dp[i][s[j]-'A', 1] = 1; 
                    }
                } 
                else if (dp[i][s[j]-'a', 0] == 0)
                {
                    if (dp[i][s[j]-'a', 1] == 1) { count[i]--; } else { count[i]++; } 
                    dp[i][s[j]-'a', 0] = 1; 
                }
                
                if (count[i] == 0 && isFirst)
                {
                    isFirst = false;
                    result = s.Substring(i,k+1);
                }
            }
        }
        
        return result;
    }
}
