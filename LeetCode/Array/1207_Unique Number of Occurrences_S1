public class Solution {
    public bool UniqueOccurrences(int[] arr) =>
                   distinctDictinaryValuesCount(occurrenceCountForEachElement(arr)) == distinctArrayElements(arr).Length;
     static int[] convertListToArray(List<int> lst)
        {
            int[] result = new int[lst.Count];

            for (int i = 0; i < lst.Count; i++)
                result[i] = lst[i];

            return result;
        }
        static int[] distinctArrayElements(int[] arr)
        {
            List<int> distinctElements = new List<int>();

            foreach (int number in arr)
            {
                if (!distinctElements.Contains(number))
                    distinctElements.Add(number);
            }

            return convertListToArray(distinctElements);
        }
        static Dictionary<int, int> occurrenceCountForEachElement(int[] arr)
        {
            List<int> result = new List<int>();
            int[] distinctArr = distinctArrayElements(arr);
            int counter = 0;
            Dictionary<int, int> dicOccurrenceCountOfDistinctElement = new Dictionary<int, int>();


            for (int i = 0; i < distinctArr.Length; i++)
            {
                for (int j = 0; j < arr.Length; j++)
                {
                    if (distinctArr[i] == arr[j])
                        counter++;
                }
                dicOccurrenceCountOfDistinctElement.Add(distinctArr[i], counter);
                counter = 0;
            }

            return dicOccurrenceCountOfDistinctElement;
        }
        static int distinctDictinaryValuesCount(Dictionary<int, int> dic) =>
            dic.Values.Distinct().Count();
}
