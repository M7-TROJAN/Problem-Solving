public class Solution {
    public bool CheckDistances(string s, int[] distance) {
        string distinctS = distinct(s);

            for (int i = 0; i < distinctS.Length; i++)
            {
                int counter = 0,
                    firstIndesx = indexOfFirstOccurrence(s, distinctS[i]),
                    lastIndesx = indexOfLastOccurrence(s,distinctS[i]);

                for (int j = firstIndesx + 1; j < lastIndesx; j++)
                {
                    counter++;
                }

                if (counter != distance[distinctS[i] - 97])
                    return false;

                counter = 0;

            }
            return true; 
    }
    static int indexOfFirstOccurrence(string s, char c)
        {
            for (int i = 0; i < s.Length; i++)
                if (s[i] == c) return i;

            return -1;
        }
        static int indexOfLastOccurrence(string s, char c)
        {
            for (int i = s.Length-1; i >=0; i--)
                if (s[i] == c) return i;

            return -1;
        }
        public static string distinct(string str)
        {
            string sortedStr = sortStringAsc(str),
                distinct = sortedStr[0].ToString();

            for (int i = 0; i < sortedStr.Length - 1; i++)
            {
                if (sortedStr[i] != sortedStr[i + 1])
                    distinct += sortedStr[i + 1];
            }

            return distinct;
        }
        public static string sortStringAsc(string str)
        {
            char temp;

            for (int i = 0; i < str.Length; i++)
            {
                for (int j = i + 1; j < str.Length; j++)
                {
                    if (str[j] < str[i])
                    {
                        temp = str[i];
                        str = str.Remove(i, 1).Insert(i, str[j].ToString());
                        str = str.Remove(j, 1).Insert(j, temp.ToString());
                    }
                }
            }
            return str;
        }
        
}
