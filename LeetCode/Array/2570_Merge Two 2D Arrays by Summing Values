public class Solution {
    public int[][] MergeArrays(int[][] nums1, int[][] nums2) {
     List<int[][]> result = new List<int[][]>();
            Dictionary<int, int> dic = twoDimArrToDic(nums1);

            for (int i = 0; i < nums2.Length; i++)
            {
                if (dic.ContainsKey(nums2[i][0]))
                    dic[nums2[i][0]] += nums2[i][1];
                else
                    dic.Add(nums2[i][0], nums2[i][1]);
            }

            dic = dic.OrderBy(obj => obj.Key).ToDictionary(obj => obj.Key, obj => obj.Value);

            return convertDicTo2DimArray(dic);   
    }
    static int[][] convertDicTo2DimArray(Dictionary<int, int> dic)
        {
            int[][] result = new int[dic.Count][];
            int[] temp = new int[2];

            for (int i = 0; i < dic.Count; i++)
            {
                temp = new int[] { dic.ElementAt(i).Key, dic.ElementAt(i).Value };
                result[i] = temp;
            }

            return result;
        }
        static Dictionary<int, int> twoDimArrToDic(int[][] arr)
        {
            Dictionary<int, int> dic = new Dictionary<int, int>();

            for (int i = 0; i < arr.Length; i++)
            {
                if (dic.ContainsKey(arr[i][0]))
                    dic[arr[i][0]] += arr[i][1];
                else
                    dic.Add(arr[i][0], arr[i][1]);
            }

            return dic;
        }
}
