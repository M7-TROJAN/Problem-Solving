public class Solution {
    public int MinimumOperations(int[] nums) {
       int minNumberGreterThanZero = 0, result = 0, numsLength = nums.Length;

            while (sumArrayElements(nums) > 0)
            {
                minNumberGreterThanZero = arrayMinNumberGreaterThanNumber(nums, 0);

                for (int i = 0; i < numsLength; i++)
                    if (isGreterThanZero(nums[i]))
                        nums[i] -= minNumberGreterThanZero;

                result++;
            }
            return result;  
    }
      static int sumArrayElements(int[] arr)
        {
            int result = 0;

            for (int i = 0; i < arr.Length; i++)
                result += arr[i];

            return result;
        }
        static int arrayMinNumberGreaterThanNumber(int[] arr, int number)
        {
            int min = int.MaxValue;

            for (int i = 0; i < arr.Length; i++)
            {
                if (arr[i] > number && arr[i] < min)
                    min = arr[i];
            }

            return min;
        }
        static bool isGreterThanZero(int number) => number > 0;
}
