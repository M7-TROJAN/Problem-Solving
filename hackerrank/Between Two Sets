static long LCM(long[] numbers)
        {
                return numbers.Aggregate(lcm);
        }
        static long GCD(long[] numbers)
        {
                return numbers.Aggregate(gcd);
        }
        static long lcm(long a, long b)
        {
                return Math.Abs(a * b) / gcd(a, b);
        }
        static long gcd(long a, long b)
        {
                return b == 0 ? a : gcd(b, a % b);
        }
        public static int getTotalX(List<int> a, List<int> b)
        {
                var longer = a.Select(i => (long)i).ToArray();
                var longerb = b.Select(i => (long)i).ToArray();
                var lcm = LCM(longer);
                var gcd = GCD(longerb);
                int result = 0;
                for(long i = lcm; i <= gcd; i++){
                        if((gcd % i == 0) && (i % lcm == 0)){
                                result++;
                        }
                }
                Console.WriteLine(result);
                return result;
        }
