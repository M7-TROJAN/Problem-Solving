public static string happyLadybugs(string b)
        {
            int hasAlphabet = Regex.Matches(b, @"[A-Z]").Count,
                counter = 0;

            string bDistinct = new String(b.Distinct().ToArray());

            bool hasMoreThanOneDistinctAlphabet = true,
                 hasUnderscore = b.Contains('_');


            if (hasAlphabet < 1 || bDistinct.Length == 1 && b.Length > 1) return "YES";

            for (int i = 0; i < bDistinct.Length; i++)
            {
                if (bDistinct[i] == '_') continue;

                for (int j = 0; j < b.Length; j++)
                {
                    if (b[j] == bDistinct[i] && bDistinct[i] != '_')
                    {
                        counter++;
                    }
                }

                if (counter < 2)
                {
                    hasMoreThanOneDistinctAlphabet = false;
                    break;
                }

                counter = 0;
            }

            if (hasMoreThanOneDistinctAlphabet && hasUnderscore == false)
            {
                bool flag = true;
                int first = 0, last = 0;

                for (int i = 0; i < bDistinct.Length; i++)
                {
                    first = b.IndexOf(bDistinct[i]);
                    last = b.LastIndexOf(bDistinct[i]);

                    for (int j = first; j<=last  ; j++)
                    {
                        if(bDistinct[i] != b[j])
                        {
                            flag = false;
                            break;
                        }
                    }

                    if (flag == false) break;
                }

                if (flag) return "YES";
            }

            return hasMoreThanOneDistinctAlphabet && hasUnderscore ? "YES" : "NO";
        }
